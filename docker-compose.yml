version: '3.8'

services:
  # Backend Flask
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: planet-backend
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - PLANET_API_KEY=${PLANET_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=sqlite:///app.db
      - LOG_LEVEL=INFO
    volumes:
      - backend_data:/app/instance
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
    networks:
      - planet-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: planet-frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - planet-network

  # Nginx Proxy
  nginx:
    image: nginx:alpine
    container_name: planet-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - planet-network

volumes:
  backend_data:
  backend_logs:
  backend_uploads:
  nginx_logs:

networks:
  planet-network:
    driver: bridge 